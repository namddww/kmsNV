<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hbl.kms.app.device.mapper.DeviceMapper">

    <select id="selectAreaList" resultType="areaList">
        SELECT
            CODE_NAME
            , CODE_VAL
            , GROUP_CD
        FROM t_code
        WHERE IS_USE = 'Y'
        AND GROUP_CD = #{codeGroupCd}
    </select>

    <select id="selectLocationCd" resultType="locationCd">
        SELECT
            LOCATION_CD
            , LOCATION_NAME
        FROM t_location
    </select>

    <!-- 자산정보 조회 -->
    <select id="selectDeviceInfoList" resultType="buildingInfoList">
        SELECT
            TB.BUILD_SEQ
            , TD.DEVICE_SEQ
            , TB.BUILD_NAME
            , (SELECT LOCATION_NAME FROM t_location TL WHERE TB.LOCATION_CD = TL.LOCATION_CD) LOCATION_CD
            , TD.FLOOR
            , (SELECT CODE_NAME FROM t_code tc WHERE TD.TYPE_CD = tc.CODE_VAL) TYPE_CD
            , TD.DEVICE_NAME
            , CONCAT(TD.POINT1, ' / ', TD.POINT2) AS POINT
            , TD.LOCATION
            , (SELECT CODE_NAME FROM t_code tc WHERE TD.STATE_CD = tc.CODE_VAL) STATE_CD
            , TD.REG_DATE
        FROM t_building TB
            INNER JOIN t_device TD ON TB.build_seq = TD.build_seq
            INNER JOIN t_floor_info TFI ON TB.build_seq = TFI.build_seq AND TD.floor_seq = TFI.floor_seq
        WHERE 1=1
        <if test="buildName != null and buildName != ''">
            AND TB.BUILD_NAME LIKE CONCAT('%', #{buildName}, '%')
        </if>
        <if test="scRegDtSt != null and scRegDtSt != ''">
            AND DATE_FORMAT(TD.REG_DATE, '%Y%m%d') &gt;= #{scRegDtSt}
        </if>
        <if test="scRegDtEd != null and scRegDtEd != ''">
            AND DATE_FORMAT(TD.REG_DATE, '%Y%m%d') &lt;= #{scRegDtEd}
        </if>
        <if test="typeCd != null and typeCd != ''">
            AND TD.TYPE_CD = #{typeCd}
        </if>
        <if test="floor != null and floor != ''">
            AND TD.FLOOR = #{floor}
        </if>
    </select>

    <!-- 건물정보 조회 -->
    <select id="selectBuildingInfoList" resultType="buildingInfoList">
        SELECT
            TB.BUILD_SEQ
            , TB.BUILD_NAME
            , (SELECT LOCATION_NAME FROM t_location TL WHERE TB.LOCATION_CD = TL.LOCATION_CD) LOCATION_CD
            , CONCAT(TB.ADDR1, ' ', TB.ADDR2) AS ADDRESS
            , TB.GROUND_FLOOR
            , TB.BASE_FLOOR
            , CONCAT(TB.STD_POINT1, ' / ', TB.STD_POINT2) AS POINT
            , TB.STD_POINT1
            , TB.STD_POINT2
            , TB.AREA_POINT1
            , TB.AREA_POINT2
            , TB.REG_DATE
            , TB.REG_USER
        FROM t_building TB
        WHERE 1=1
        <if test="buildName != null and buildName != ''">
            AND TB.BUILD_NAME LIKE CONCAT('%', #{buildName}, '%')
        </if>
        <if test="scRegDtSt != null and scRegDtSt != ''">
            AND DATE_FORMAT(TB.REG_DATE, '%Y%m%d') &gt;= #{scRegDtSt}
        </if>
        <if test="scRegDtEd != null and scRegDtEd != ''">
            AND DATE_FORMAT(TB.REG_DATE, '%Y%m%d') &lt;= #{scRegDtEd}
        </if>
        <if test="locationCd != null and locationCd != ''">
            AND TB.LOCATION_CD = #{locationCd}
        </if>
        <if test="isUse != null and isUse != ''">
            AND TB.IS_USE = #{isUse}
        </if>
    </select>

    <select id="selectFloorFilePath" resultType="String">
        SELECT
            fi.FILE_PATH
        FROM t_building tb
                 LEFT JOIN t_floor_info fi ON tb.BUILD_SEQ = fi.BUILD_SEQ
        WHERE fi.BUILD_SEQ = #{buildSeq}
          AND fi.fLOOR = #{floor}
    </select>

    <!-- FloorSeq 조회-->
    <select id="selectFloorSeq" resultType="int">
        SELECT
            FLOOR_SEQ
        FROM t_floor_info
        WHERE BUILD_SEQ = #{buildSeq}
          AND FLOOR = #{floor}
    </select>

    <!-- 자산정보 저장 -->
    <insert id="insertDevice" useGeneratedKeys="true" keyProperty="deviceSeq">
        INSERT INTO t_device
        ( BUILD_SEQ
          , FLOOR_SEQ
          , FLOOR
          , DEVICE_NAME
          , TYPE_CD
          , LOCATION
          , REG_DATE
          , REG_USER
          , STATE_CD
          , IS_USE
          , MEMO
        ) VALUES (
          #{buildSeq}
          , #{floorSeq}
          , #{floor}
          , #{deviceName}
          , #{typeCd}
          , #{locationCd}
          , NOW()
          , 999
          , #{stateCd}
          , #{isUse}
          , #{memo}
        )
    </insert>
    <!-- 자산정보 저장 -->
    <insert id="insertDeviceTracking" useGeneratedKeys="true" keyProperty="buildSeq">
        INSERT INTO t_tracking
            ( DEVICE_SEQ
            , POINT1
            , POINT2
            , TRACK_TYPE_CD
            , REG_DATE
        ) VALUES (
             #{deviceSeq}
             , #{point1}
             , #{point2}
             , #{stateCd}
             , NOW()
         )
    </insert>

    <!-- 층별 자산정보 조회 -->
    <select id="selectDeviceListByFloor" resultType="device">
        SELECT
            t.point1
            , t.point2
            , d.type_cd
            , d.floor
            , d.device_name
        FROM t_device d
        LEFT JOIN t_tracking t ON d.device_seq = t.device_seq
        WHERE
        <if test="floorSeq != 0">
            d.floor_seq = #{floorSeq}
        </if>
        <if test="buildSeq != 0">
            d.build_seq = #{buildSeq}
        </if>
    </select>
    <select id="selectDeviceDetail" resultType="deviceDetail">
        SELECT
            TB.BUILD_SEQ
            , TD.DEVICE_SEQ
            , TB.BUILD_NAME
            , (SELECT LOCATION_NAME FROM t_location TL WHERE TB.LOCATION_CD = TL.LOCATION_CD) LOCATION_CD
            , TB.GROUND_FLOOR
            , TB.BASE_FLOOR
            , CONCAT(TB.ADDR1, ' ', TB.ADDR2) AS ADDRESS
            , TD.DEVICE_NAME
            , TD.FLOOR
            , TD.LOCATION
            , TD.POINT1
            , TD.POINT2
            , TD.TYPE_CD
            , TD.MEMO
            , TB.STD_POINT1
            , TB.STD_POINT2
            , TB.AREA_POINT1
            , TB.AREA_POINT2
        FROM t_building TB
            INNER JOIN t_device TD ON TB.BUILD_SEQ = TD.BUILD_SEQ
        WHERE TB.BUILD_SEQ = #{buildSeq}
        AND TD.DEVICE_SEQ = #{deviceSeq}
    </select>

    <update id="updateDevice">
        UPDATE t_device
        SET DEVICE_NAME     = #{deviceName}
            , FLOOR         = #{floor}
            , TYPE_CD       = #{typeCd}
            , LOCATION      = #{location}
            , POINT1        = #{point1}
            , POINT2        = #{point2}
            , MEMO          = #{memo}
        WHERE BUILD_SEQ = #{buildSeq}
        AND DEVICE_SEQ  = #{deviceSeq}
    </update>

</mapper>