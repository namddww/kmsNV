<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hbl.kms.app.device.mapper.DeviceMapper">

    <!-- 건물정보 조회 -->
    <select id="selectBuildingInfoList" resultType="buildingInfoList">
        SELECT
            BUILD_SEQ
            , BUILD_NAME
            , LOCATION_CD
            , CONCAT(ADDR1, ' ', ADDR2) AS ADDRESS
            , GROUND_FLOOR
            , BASE_FLOOR
            , CONCAT(STD_POINT1, ' / ', STD_POINT2) AS POINT
            , LOCATION_CD
            , STD_POINT1
            , STD_POINT2
            , AREA_POINT1
            , AREA_POINT2
            , REG_DATE
            , REG_USER
        FROM t_building
    </select>

    <select id="selectFloorFilePath" resultType="String">
        SELECT
            fi.FILE_PATH
        FROM t_building tb
                 LEFT JOIN t_floor_info fi ON tb.BUILD_SEQ = fi.BUILD_SEQ
        WHERE fi.BUILD_SEQ = #{buildSeq}
          AND fi.fLOOR = #{floor}
    </select>

    <!-- FloorSeq 조회-->
    <select id="selectFloorSeq" resultType="int">
        SELECT
            FLOOR_SEQ
        FROM t_floor_info
        WHERE BUILD_SEQ = #{buildSeq}
          AND FLOOR = #{floor}
    </select>

    <!-- 자산정보 저장 -->
    <insert id="insertDevice">
        INSERT INTO t_device
        ( BUILD_SEQ
          , FLOOR_SEQ
          , FLOOR
          , TYPE_CD
          , LOCATION
          , POINT1
          , POINT2
          , REG_DATE
          , REG_USER
          , STATE_CD
          , IS_USE
          , MEMO
        ) VALUES (
          #{buildSeq}
          , (SELECT IFNULL(MAX(td.BUILD_SEQ), 0) + 1 FROM t_device td)
          , #{floor}
          , #{typeCd}
          , #{locationCd}
          , #{point1}
          , #{point2}
          , NOW()
          , 999
          , #{stateCd}
          , #{isUse}
          , #{memo}
        )
    </insert>

    <!-- 층별 자산정보 조회 -->
    <select id="selectDeviceListByFloor" resultType="device">
        SELECT t.point1, t.point2, d.type_cd
        FROM t_device d
        LEFT JOIN t_tracking t ON d.device_seq = t.device_seq
        WHERE d.floor_seq = #{floorSeq}
    </select>

</mapper>