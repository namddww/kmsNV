<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hbl.kms.app.building.mapper.BuildingMapper">

    <!-- 건물정보 조회 -->
    <select id="selectBuildingList" resultType="building">
        SELECT
            build_seq
            , build_name
            , addr1
            , addr2
            , ground_floor
            , base_floor
            , reg_date
            , std_point1
            , std_point2
            , area_point1
            , area_point2
        FROM t_building
        WHERE 1=1
        <if test="buildName != null">
            AND build_name LIKE CONCAT('%', #{buildName}, '%')
        </if>
        <if test="scRegDtSt != null and scRegDtSt != ''">
            AND DATE_FORMAT(reg_date, '%Y%m%d') &gt;= #{scRegDtSt}
        </if>
        <if test="scRegDtEd != null and scRegDtEd != ''">
            AND DATE_FORMAT(reg_date, '%Y%m%d') &lt;= #{scRegDtEd}
        </if>
        <if test="locationCd != null and locationCd != ''">
            AND location_cd = #{locationCd}
        </if>
        <if test="isUse != null and isUse != ''">
            AND is_use = #{isUse}
        </if>
        <if test="x1 != null and x1 != '' and x2 != null and x2 != '' and y1 != null and y1 != '' and y2 != null and y2 != '' ">
            AND #{x1} &lt; std_point1 AND std_point1 &lt; #{x2}
            AND #{y1} &lt; std_point2 AND std_point2 &lt; #{y2}
        </if>
    </select>

    <!-- 건물정보 조회 -->
    <select id="selectBuildingInfo" resultType="building">
        SELECT
            build_seq
            , build_name
            , addr1
            , addr2
            , ground_floor
            , base_floor
            , reg_date
            , std_point1
            , std_point2
            , area_point1
            , area_point2
            , search_info
            , memo
            , reg_date
            , reg_user
        FROM t_building
        WHERE build_seq = #{buildSeq}
    </select>

    <!-- 건물정보 등록 -->
    <insert id="insertBuilding" useGeneratedKeys="true" keyProperty="buildSeq">
        INSERT INTO t_building
        ( std_point1
          , std_point2
          , area_point1
          , area_point2
          , build_name
          , addr1
          , addr2
          , ground_floor
          , base_floor
          , is_use
          , state_cd
          , search_info
          , memo
          , reg_date
          , reg_user
        ) VALUES (
          #{stdPoint1}
          , #{stdPoint2}
          , #{areaPoint1}
          , #{areaPoint2}
          , #{buildName}
          , #{addr1}
          , #{addr2}
          , #{groundFloor}
          , #{baseFloor}
          , 'Y'
          , ''
          , #{searchInfo}
          , #{memo}
          , NOW()
          , 0
        );
    </insert>

    <!-- 층 정보 등록 -->
    <insert id="insertFloorInfo">
        INSERT INTO t_floor_info
        ( build_seq
          , floor
          , file_path
          , opacity
          , is_use
        )
        VALUES (
          #{buildSeq}
          , #{floor}
          , #{filePath}
          , #{opacity}
          , 'Y'
        )
    </insert>

    <!-- 층 정보 조회 -->
    <select id="selectFloorInfoList" resultType="floorInfo">
        SELECT
            floor_seq
            , build_seq
            , floor
            , file_path
            , is_use
            , opacity
        FROM t_floor_info
        WHERE build_seq = #{buildSeq}
        ORDER BY floor DESC
    </select>

    <!-- 건물 정보 update -->
    <update id="updateBuilding">
        UPDATE t_building
        SET
            std_point1 = #{stdPoint1}
            , std_point2 = #{stdPoint2}
            , area_point1 = #{areaPoint1}
            , area_point2 = #{areaPoint2}
            , build_name = #{buildName}
            , addr1 = #{addr1}
            , addr2 = #{addr2}
            , search_info = #{searchInfo}
            , memo = #{memo}
        WHERE build_seq = #{buildSeq}
    </update>

    <!-- 층 정보 delete -->
    <delete id="deleteFloorInfo">
        DELETE FROM t_floor_info
        WHERE build_seq = #{buildSeq}
    </delete>

    <!-- 층 정보 update -->
    <update id="updateFloorInfo">
        UPDATE t_floor_info
        SET
            file_path = #{filePath}
            , opacity = #{opacity}
            , is_use = #{isUse}
        WHERE floor_seq = #{floorSeq}
    </update>

</mapper>